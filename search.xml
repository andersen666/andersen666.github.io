<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c#数据库相关</title>
      <link href="/2019/08/20/c-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/"/>
      <url>/2019/08/20/c-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>数据库中最常见的就是增删改查，那么在数据库中是怎么进行的呢？今天来总结以下</p><p>在这之前，我们需要先了解ADO.NET。</p><p>简单来说，它是在.NET编程环境中使用的数据访问接口。</p><p>关于操作数据主要有五大类</p><ul><li>Connection </li><li>Command</li><li>DataReader</li><li>DataAdapter</li><li>DataSet</li></ul><p>我们可以从下图来看</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g66ispfexbj206j0b3diq.jpg" alt="ADO.NET"></p><p>数据库比作水源；</p><ul><li><p>Connection好比进水笼头,（进行数据库的连接，打开或者关闭）；</p></li><li><p>Command像抽水机（进行数据库的操作，主要操作<strong>增删改</strong>）</p></li><li><p>DataReader,DataAdapter就像输水管，担任着水的传输任务，并起着桥梁的作用(数据库表的读取)</p><blockquote><p>DataAdapter像一根输水管，通过发动机，把水从水源输送到水库里进行保存。<br>DataReader也是一种水管，起着同样的作用。<br>和DataAdapter不同的是，DataReader不把水输送到水库里面，而是单向地直接把水送到需要水的用户那里或田地里，所以要比在水库中转一下（速度）更快。</p></blockquote></li><li><p>DataSet则是一个大水库，把抽上来的水按一定关系的池子进行存放。即使撤掉“抽水装置”（断开连接，离线状态），也可以保持“水”的存在。这也正是ADO.NET的核心。</p></li><li><p>DataTabe则像水库中的每个独立的水池子，分别存放不同种类的水。一个大水库由一个或多个这样的水池子组成。</p><p>（在我理解是DataSet相当于一个虚拟的数据库，DataTabe相当于虚拟的表，只不过是从真正的数据库取来而已）</p></li></ul><p>下面来进行实际操作。不管怎样，我们需要先要在vs中连接数据库；这时候我们就用到了SqlConnection，当然在这之前我们需要先 引用命名空间（类都在这其中）using System.Data.SqlClient;</p><p>我在本地服务器有一个数据库服务器名称 127.0.0.1;数据库名字 test1;用户名 sa 密码xs19940316”</p><p>所以我们就需要实例化对象,连接数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlConnection Conn = new SqlConnection(&quot;server=127.0.0.1;database=test1;user=sa;pwd=xs19940316&quot;);</span><br></pre></td></tr></table></figure><p>连接上了数据库，当然是打开数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Conn.open();</span><br></pre></td></tr></table></figure><p>可能会想如果数据库服务器名称或者密码填错呢，肯定会报错的。。假如此时我将数据库名称写错</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g66jec2i9ij20q90a0mya.jpg" alt="wrong"></p><p>所以我们一般会将其写在try catch语句中以便看到报错信息。</p><p>那么正式开始数据库的操作，我们先进行增删改的操作，操作类肯定会想到SqlCommand 。</p><p>我们先查看数据库中students表中的字段与值。</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g66jjw6cj5j20as02j0si.jpg" alt="stu"></p><p>首先连接，打开数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlConnection Conn = new SqlConnection(&quot;server=127.0.0.1;database=test1;user=sa;pwd=xs19940316&quot;);</span><br></pre></td></tr></table></figure><p><strong>第一种方法</strong></p><p>然后我们需要定义一个字符串来存放操作的语句，以便执行</p><pre><code>string strSql = &quot;INSERT dbo.students SELECT &apos;108&apos;,&apos;5班&apos;,&apos;小明&apos;,&apos;17&apos;,&apos;29&apos;&quot;;SqlCommand Cmd = new SqlCommand(strSql,Conn);</code></pre><p>​            </p><p>   执行数据库操作（ExecuteNonQuery方法）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmd.ExecuteNonQuery();</span><br></pre></td></tr></table></figure><p>我们需要注意的是返回的是受影响 的行数int，所以我们可以通过这个值来判定是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">int s= Cmd.ExecuteNonQuery();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> if(s==1)</span><br><span class="line"> &#123;</span><br><span class="line">     Console.WriteLine(&quot;sucess&quot;);</span><br><span class="line"> &#125;</span><br><span class="line"> else</span><br><span class="line"> &#123;</span><br><span class="line">     Console.WriteLine(&quot;fail&quot;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>第二种方法</strong></p><p>我们直接创建一个 SqlCommand 具体如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SqlCommand cmd = Conn.CreateCommand();</span><br><span class="line"></span><br><span class="line">cmd.CommandText = &quot;INSERT dbo.students SELECT &apos;178&apos;,&apos;5班&apos;,&apos;小明5&apos;,&apos;175&apos;,&apos;29&apos;&quot;;</span><br></pre></td></tr></table></figure><p>   执行数据库操作（ExecuteNonQuery方法）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmd.ExecuteNonQuery();</span><br></pre></td></tr></table></figure><p>以上是增删改的具体方法</p><p><strong>以下介绍查询的方法</strong></p><p>连接创建连接相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SqlConnection conn = new SqlConnection(&quot;server=.;database=test1;user=sa;pwd=xs19940316&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            conn.Open();</span><br><span class="line"></span><br><span class="line">            string strSql = &quot;select  * from  students&quot;;</span><br><span class="line"></span><br><span class="line">            SqlCommand Cmd = new SqlCommand(strSql, conn);</span><br></pre></td></tr></table></figure><p>然后进行查询操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SqlDataReader dr;</span><br><span class="line"></span><br><span class="line">dr = Cmd.ExecuteReader();</span><br><span class="line"></span><br><span class="line">while (dr.Read())</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    Console.Write(dr[0].ToString() + &quot;,&quot;);</span><br><span class="line">    Console.Write(dr[1].ToString() + &quot;,&quot;);</span><br><span class="line">    Console.Write(dr[2].ToString() + &quot;,&quot;);</span><br><span class="line">    Console.Write(dr[3].ToString() + &quot;,&quot;);</span><br><span class="line">    Console.Write(dr[&quot;stuSex&quot;].ToString() + &quot;,&quot;);</span><br><span class="line">    Console.WriteLine();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在以上我们可以注意到 是    Console.Write();不是    Console.WriteLine();</strong></p><p><strong>而且既可以是索引 dr[3]，也可以是dr[“stuSex”]该字段。</strong></p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/14/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/08/14/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>目的性<strong>是想往数据库一张表中插入数据utb_log_DailyEvents（日志表)和Mes_Apply（申请表）</strong></p><p>如下表（utb_log_DailyEvents）：</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zluyiq53j21db01hq2s.jpg" alt="loading"></p><p>如下表（Mes_Apply）</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zmotknpmj20zn018q2r.jpg" alt="loading"></p><p>其中涉及到的表有Log_EmployeeList，（工程师表），stb006（人员表），</p><p>Log_Contents（事件类型表）。</p><p>CIMS字段从Log_EmployeeList表EmploeeCode字段获得；</p><p>Sponsor字段是从stb006表UserCode获得</p><p>Remark字段是从Log_Contents表Programme获得</p><p>表分别列出：</p><p>Log_EmployeeList</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zm4hzi7oj205701i0qz.jpg" alt="loading"></p><p>stb006</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zm5t959kj21dw01gdfo.jpg" alt="loading"></p><p>Log_Contents</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zmd6raivj20o709s3ys.jpg" alt="loading"></p><p>需要注意的是表utb_log_DailyEvents Ordinal为主键，自增列</p><p>做出的效果如图：</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zmrkzjlmj20rb0m9glw.jpg" alt="loading"></p><p>先整体规划布局：</p><p>用到的控件是textBox，comboBox，richTextBox，dateTimePicker，button。</p><p>主要在于添加日志button按钮事件</p><p>以下是碰到的几个坑：</p><p><strong>将varchar值转换为数据类型为int的列时发生语法错误</strong></p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g609cp6n51j20xg0b2wf8.jpg" alt="loading"></p><p>用cast()函数进行转换即可，将EmploeeCode转换成字符类型即可。<strong>cast(EmploeeCode as varchar(50))</strong>,然后进行匹配和比较就不会发生错误了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.CommandText = &quot; SELECT Name FROM dbo.Log_EmployeeList WHERE cast(EmploeeCode as varchar(50)) = &apos;&quot; + comboBox2.Text + &quot;&apos;&quot;;</span><br></pre></td></tr></table></figure><p>本地下载 <a href="/download/demoxxx.rar" ">点击下载</a></p><p>百度网盘 <a href="https://pan.baidu.com/s/1hqC2DH4_-oJ2GoWEr1HB4g" " target="_blank" rel="noopener">点击下载</a></p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一个窗体应用程序</title>
      <link href="/2019/08/14/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93(%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F)/"/>
      <url>/2019/08/14/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93(%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F)/</url>
      
        <content type="html"><![CDATA[<p>目的性<strong>是想往数据库一张表中插入数据utb_log_DailyEvents（日志表)和Mes_Apply（申请表）</strong></p><p>如下表（utb_log_DailyEvents）：</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zluyiq53j21db01hq2s.jpg" alt="loading"></p><p>如下表（Mes_Apply）</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zmotknpmj20zn018q2r.jpg" alt="loading"></p><p>其中涉及到的表有Log_EmployeeList，（工程师表），stb006（人员表），</p><p>Log_Contents（事件类型表）。</p><p>CIMS字段从Log_EmployeeList表EmploeeCode字段获得；</p><p>Sponsor字段是从stb006表UserCode获得</p><p>Remark字段是从Log_Contents表Programme获得</p><p>表分别列出：</p><p>Log_EmployeeList</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zm4hzi7oj205701i0qz.jpg" alt="loading"></p><p>stb006</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zm5t959kj21dw01gdfo.jpg" alt="loading"></p><p>Log_Contents</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zmd6raivj20o709s3ys.jpg" alt="loading"></p><p>需要注意的是表utb_log_DailyEvents Ordinal为主键，自增列</p><p>做出的效果如图：</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4ly1g5zmrkzjlmj20rb0m9glw.jpg" alt="loading"></p><p>先整体规划布局：</p><p>用到的控件是textBox，comboBox，richTextBox，dateTimePicker，button。</p><p>主要在于添加日志button按钮事件</p><p>以下是碰到的几个坑：</p><p><strong>将varchar值转换为数据类型为int的列时发生语法错误</strong></p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g609cp6n51j20xg0b2wf8.jpg" alt="loading"></p><p>用cast()函数进行转换即可，将EmploeeCode转换成字符类型即可。<strong>cast(EmploeeCode as varchar(50))</strong>,然后进行匹配和比较就不会发生错误了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.CommandText = &quot; SELECT Name FROM dbo.Log_EmployeeList WHERE cast(EmploeeCode as varchar(50)) = &apos;&quot; + comboBox2.Text + &quot;&apos;&quot;;</span><br></pre></td></tr></table></figure><p>本地下载 <a href="/download/demoxxx.rar" ">点击下载</a></p><p>百度网盘 <a href="https://pan.baidu.com/s/1hqC2DH4_-oJ2GoWEr1HB4g" " target="_blank" rel="noopener">点击下载</a></p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>随笔</title>
      <link href="/2019/08/03/%E9%9A%8F%E7%AC%94/"/>
      <url>/2019/08/03/%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>事务与嵌套事务</title>
      <link href="/2019/07/28/%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%B5%8C%E5%A5%97%E4%BA%8B%E5%8A%A1/"/>
      <url>/2019/07/28/%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%B5%8C%E5%A5%97%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h4 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h4><p>当我们在银行系统中，我们需要的功能是张三转给李四150元，李四收到张三150元。我们新建账户表Test_Tran，因为在实际情况中，钱数在银行卡内是&gt;0  的,所以添加check约束 Money&gt;0。我们会采用一下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> Test_Tran <span class="keyword">SET</span> Money=Money<span class="number">-150</span> <span class="keyword">WHERE</span>  <span class="keyword">Id</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">UPDATE</span>  dbo.Test_Tran  <span class="keyword">SET</span> Money=Money+<span class="number">150</span> <span class="keyword">WHERE</span>  <span class="keyword">Id</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>但事实如果A卡内没有150元，更新就会失败，但是第二个会更新成功,导致银行亏本。。</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fnbazluyj210a04ot8w.jpg" alt></p><p>所以我们想让这两句话作为一个整体来执行，要么都成功，要么都失败<br>        所以采用事务原理，引出事务的概念</p><h5 id="事务（Transaction）是并发控制的基本单位。"><a href="#事务（Transaction）是并发控制的基本单位。" class="headerlink" title="事务（Transaction）是并发控制的基本单位。"></a>事务（Transaction）是并发控制的基本单位。</h5><h6 id="特性：-ACID"><a href="#特性：-ACID" class="headerlink" title="特性：(ACID)"></a>特性：(ACID)</h6><ul><li>Atomic（原子性）：事务中包含的操作被看做一个逻辑单元，这个逻辑单元中的操作要么全部成功，要么全部失败。</li><li>Consistency（一致性）：只有合法的数据可以被写入数据库，否则事务应该将其回滚到最初状态,类似于约束 。</li><li>Isolation（隔离性）：事务允许多个用户对同一个数据进行并发访问，而不破坏数据的正确性和完整性。同时，并行事务的修改必须与其他并行事务的修改相互独立。</li><li>Durability（持久性）：事务结束后，事务处理的结果必须能够得到固化。</li></ul><p>对于<strong>隔离性</strong>我们可以举例</p><p>如果我们想删除一张表，利用事务，假设我们在一个查询窗口执行下面命令</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fnbta9vxj20ds04rweg.jpg" alt></p><p>我们需要知道此时事务还没有完成，如果我们在另一个窗口 直接查询该表，则会出现下面情况：</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fncagq39j20ai0173ya.jpg" alt></p><p>执行所花时间一直在增长，没有结果，也没有消息。此时这个进程在等待另一个进程操作完成。 </p><p>一旦我在第一个 SSMS 执行ROLLBACK后，就会很快可以查询到，这就是隔离性。</p><h6 id="事务基本语句"><a href="#事务基本语句" class="headerlink" title="事务基本语句"></a>事务基本语句</h6><p>开始事物：BEGIN TRANSACTION </p><p>提交事物：COMMIT TRANSACTION </p><p>回滚事务：ROLLBACK TRANSACTION </p><p>保存事务  SAVE TRANSACTION </p><p>我们此时回到最初想要的功能，张三转账150给李四，李四收到张三，我们可以采用以下事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>  TRAN  <span class="keyword">TEST</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">Errors</span> <span class="built_in">INT</span> </span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">Errors</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">UPDATE</span> Test_Tran  <span class="keyword">SET</span> Money=Money<span class="number">-150</span> <span class="keyword">WHERE</span>  <span class="keyword">Id</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">Errors</span>=@@<span class="keyword">ERROR</span>+@<span class="keyword">Errors</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> Test_Tran  <span class="keyword">SET</span> Money=Money+<span class="number">150</span> <span class="keyword">WHERE</span>  <span class="keyword">Id</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">Errors</span>=@@<span class="keyword">ERROR</span>+@<span class="keyword">Errors</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span>  @<span class="keyword">Errors</span> &lt;&gt; <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line">PRINT <span class="string">'FAIL'</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ELSE</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">'SUCESS'</span></span><br><span class="line"><span class="keyword">COMMIT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>如果此时张三账户中没有150元可以转账给李四，则会报错</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fncpw1gfj211e06o0t0.jpg" alt></p><p>这样我们就完成了事务的基本操作。</p><h4 id="嵌套事务"><a href="#嵌套事务" class="headerlink" title="嵌套事务"></a>嵌套事务</h4><p>在这之前我们需要先了解 @@TRANCOUNT <a href="https://docs.microsoft.com/zh-cn/sql/t-sql/functions/trancount-transact-sql?view=sql-server-2017" target="_blank" rel="noopener">官方文档 </a>。得出基本的结论如下</p><p>BEGIN TRANSACTION 语句将 @@TRANCOUNT 增加 1。</p><p>COMMIT TRANSACTION 将 @@TRANCOUNT 递减 1。</p><p> ROLLBACK TRANSACTION 将 @@TRANCOUNT 递减到 0。</p><p>*<em>ROLLBACK TRANSACTION savepoint_name 除外它不影响 @@TRANCOUNT *</em> </p><p>我们可与通过一下来进行验证，先看<em>提交事务操作</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span> TRAN A</span><br><span class="line">PRINT <span class="string">'开始A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN B</span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'开始B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line">       <span class="keyword">INSERT</span>  dbo.test <span class="keyword">SELECT</span> <span class="number">7</span>,<span class="number">7</span>,<span class="string">'G'</span></span><br><span class="line"> <span class="keyword">COMMIT</span> </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'提交A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">COMMIT</span> </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'提交B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><p>这是最简单的提交事务，不包含回滚等，可以得出结果</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fndcritdj20bn04rdg1.jpg" alt></p><p>再看<em>回滚事务操作</em>，这里ROLLBACK  这里就会分两种情况   在外部和内部</p><p>当在<strong>外部</strong>时候我们可以来例证</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN A</span><br><span class="line">PRINT <span class="string">'开始A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN B</span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'开始B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line">       <span class="keyword">INSERT</span>  dbo.test <span class="keyword">SELECT</span> <span class="number">8</span>,<span class="number">8</span>,<span class="string">'G'</span></span><br><span class="line"> <span class="keyword">COMMIT</span> </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'提交A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">ROLLBACK</span> </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'回滚B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><p>这里外部已经回滚，但是我们需要理解的是，<strong>当外部回滚，内部的也会回滚，纵使内部已经提交</strong></p><p>我们可以通过查询test 表来验证这一点</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fne6e6k5j20c0089jr8.jpg" alt></p><p>当在<strong>内部</strong>时候我们也可以来例证</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN A</span><br><span class="line">PRINT <span class="string">'开始A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN B</span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'开始B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line">       <span class="keyword">INSERT</span>  dbo.test <span class="keyword">SELECT</span> <span class="number">8</span>,<span class="number">8</span>,<span class="string">'G'</span></span><br><span class="line"> <span class="keyword">ROLLBACK</span>  </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'回滚A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">COMMIT</span> </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'提交B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fneojfiaj20l407m3z2.jpg" alt></p><p>这是我们可以得出结论 在内部是无法rollback 的，因为会直接将其归0，然而commit会减1，再次commit就会出现0-1=-1值，但是@@TRANCOUNT是不允许的。从而报错。</p><p>但是我们想回滚内部事务么办？这时候就需要 save 让其返回一个保存点。</p><p>但是需要注意的是 这样返回的@@TRANCOUNT值是不变的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--测试返回点</span></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN A</span><br><span class="line">PRINT <span class="string">'开始A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRAN B</span><br><span class="line"></span><br><span class="line"><span class="keyword">SAVE</span> TRAN B_SAVE</span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'开始B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line">       <span class="keyword">INSERT</span>  dbo.test <span class="keyword">SELECT</span> <span class="number">8</span>,<span class="number">8</span>,<span class="string">'G'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ROLLBACK</span> TRAN   B_SAVE</span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'回滚A事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">COMMIT</span> </span><br><span class="line"></span><br><span class="line">PRINT <span class="string">'提交B事务@@TRANCOUNT全局变量值是'</span> + <span class="keyword">CAST</span>(@@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><p>我们直接看结果</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fnf6he33j20e90633yr.jpg" alt></p><p>这时候我们查看表格也  生成该语句<code>INSERT  dbo.test SELECT 8,8,&#39;G&#39;</code>，看似没有问题，但是我们需要注意的一个问题是最后提交事务后全局 @@TRANCOUNT值=1 这是有问题的，说明还是有事务在系统中，这样我们在关闭窗口会提示</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fnfjxtzxj20pe05t74b.jpg" alt></p><p>这个我们暂时不考虑，后面会说到。起码来说，我们达到了回滚内部事务的目的。</p><p>实际情况中，我们经常遇到的是父存储过程调用子存储过程，而且父，子存储过程都存在事务<br> 我们可以用以下举例，test表中，我们限制id列为主键。</p><ul><li><p>内部存储过程主要用于插入值，并返回一个值给外部 </p></li><li><p>外部存储过程则通过传进来的值正确则插入，不正确则回滚</p><p>我们先看 <em>外部存储过程</em></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> [test1]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[outertran]    Script Date: 2019-07-28 10:11:48 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> [dbo].[outertran]</span><br><span class="line">    @<span class="keyword">ID</span> <span class="built_in">BIGINT</span>,</span><br><span class="line">    @UserID <span class="built_in">BIGINT</span>,</span><br><span class="line">    @<span class="keyword">Name</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line">    <span class="keyword">DECLARE</span> @TRANCOUNT <span class="built_in">int</span>=(<span class="keyword">select</span> @@TRANCOUNT)</span><br><span class="line">    PRINT <span class="string">'未进入父事务前全局@@TRANCOUNT:'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">BEGIN</span> TRAN </span><br><span class="line">    <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT) </span><br><span class="line">    PRINT <span class="string">'进入父事务后全局@@TRANCOUNT:'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))    </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">DECLARE</span> @<span class="keyword">result</span> <span class="built_in">INT</span></span><br><span class="line"></span><br><span class="line">    EXEC @<span class="keyword">result</span> = innertran @<span class="keyword">ID</span> = @<span class="keyword">ID</span>, @UserID = @UserID, @<span class="keyword">Name</span> =@<span class="keyword">Name</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">IF</span> ( @<span class="keyword">result</span> &lt;= <span class="number">0</span> ) </span><br><span class="line">        <span class="keyword">BEGIN</span></span><br><span class="line">            <span class="keyword">ROLLBACK</span> TRAN  ;</span><br><span class="line">            <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT) </span><br><span class="line">            PRINT <span class="string">'回滚父事务后全局@@TRANCOUNT:'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)) </span><br><span class="line">                        </span><br><span class="line">            <span class="keyword">RETURN</span> ;</span><br><span class="line">        <span class="keyword">END</span> </span><br><span class="line">    <span class="keyword">COMMIT</span> TRAN </span><br><span class="line">    <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT) </span><br><span class="line">    PRINT <span class="string">'提交父事务后全局@@TRANCOUNT:'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))</span><br></pre></td></tr></table></figure><p> 再看 <em>内部存储过程</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> [test1]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[innertran]    Script Date: 2019-07-28 14:29:03 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">--内层事务存储过程，演示如何处理才能在嵌套的事务存储过程中正确处理事务</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> [dbo].[innertran]</span><br><span class="line">    @<span class="keyword">ID</span> <span class="built_in">BIGINT</span> ,</span><br><span class="line">    @UserID <span class="built_in">BIGINT</span> ,</span><br><span class="line">    @<span class="keyword">Name</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> @TRANCOUNT <span class="built_in">int</span>=(<span class="keyword">select</span> @@TRANCOUNT)</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">SET</span> XACT_ABORT <span class="keyword">ON</span></span><br><span class="line">        <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)</span><br><span class="line">        PRINT <span class="string">'未进入子事务前全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))    </span><br><span class="line">        <span class="keyword">BEGIN</span> TRAN tran1      <span class="comment">--开始事务 </span></span><br><span class="line">       <span class="comment">--SAVE TRAN tranpoint   --保存事务点</span></span><br><span class="line">        <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)</span><br><span class="line">        PRINT <span class="string">'进入子事务后全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))    </span><br><span class="line">       </span><br><span class="line">        <span class="keyword">IF</span>(<span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> TOP <span class="number">1</span> * <span class="keyword">FROM</span> dbo.test <span class="keyword">WHERE</span> <span class="keyword">ID</span>=@<span class="keyword">ID</span>))    </span><br><span class="line">        <span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">ROLLBACK</span> TRAN </span><br><span class="line">                <span class="comment">--ROLLBACK TRAN tranpoint ;   --回滚保存点的事务   </span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)  </span><br><span class="line">                PRINT <span class="string">'只是回滚子事务后全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))  </span><br><span class="line"><span class="comment">--最好办法就是保存该事务，提交该事务</span></span><br><span class="line">                <span class="comment">--COMMIT TRAN tran1 ;            --提示当前事务</span></span><br><span class="line">  <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)  </span><br><span class="line">                PRINT <span class="string">'回滚子事务提交后全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))    </span><br><span class="line">                <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)  </span><br><span class="line">                PRINT <span class="string">'回滚子事务后全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))     </span><br><span class="line">                          </span><br><span class="line">                <span class="keyword">RETURN</span> <span class="number">0</span> ;  </span><br><span class="line">        <span class="keyword">END</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">--插表开始</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">INSERT</span>  dbo.test</span><br><span class="line">                ( <span class="keyword">ID</span>, UserID, <span class="keyword">Name</span>)</span><br><span class="line">        <span class="keyword">VALUES</span>  ( @<span class="keyword">ID</span>, </span><br><span class="line">                  @UserID,</span><br><span class="line">                  @<span class="keyword">Name</span>  </span><br><span class="line">                  )</span><br><span class="line">        <span class="comment">--插表结束</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">IF</span> @@<span class="keyword">error</span> &lt;&gt; <span class="number">0</span> </span><br><span class="line">            <span class="keyword">BEGIN</span>  </span><br><span class="line">                <span class="keyword">ROLLBACK</span> TRAN tranpoint ; <span class="comment">--回滚保存点的事务   </span></span><br><span class="line">                <span class="keyword">COMMIT</span> TRAN tran1 ;          <span class="comment">--提示当前事务  </span></span><br><span class="line">                <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)  </span><br><span class="line">                PRINT <span class="string">'回滚子事务后全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))     </span><br><span class="line">                                         </span><br><span class="line">                <span class="keyword">RETURN</span> <span class="number">0</span>;  </span><br><span class="line">            <span class="keyword">END</span>        </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">COMMIT</span> TRAN tran1 ;    </span><br><span class="line">        <span class="keyword">SET</span> XACT_ABORT <span class="keyword">OFF</span>;    </span><br><span class="line">        <span class="keyword">SET</span> @TRANCOUNT=(<span class="keyword">select</span> @@TRANCOUNT)  </span><br><span class="line">        PRINT <span class="string">'提交子事务后全局@@TRANCOUNT'</span>+<span class="keyword">CAST</span>(@TRANCOUNT <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>))</span><br><span class="line">           </span><br><span class="line">        <span class="keyword">RETURN</span> <span class="number">1</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>我们可以看到 当我们传进来3个值 @ID, @UserID,@Name   后 进入事务开始执行内部存储过程。</p><p>在进行内部存储过程执行中，我们先判定这个表中是否有相同的Id，因为我们采用id为主键,如果有则回滚事务，返回0 给外部存储过程。没有返回1给外部存储过程。</p><p>简化内存储过程判断主键插入是否相同code</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">If EXISTS(<span class="keyword">SELECT</span> TOP <span class="number">1</span> * <span class="keyword">FROM</span> dbo.test <span class="keyword">WHERE</span> <span class="keyword">ID</span>=@<span class="keyword">ID</span>))    </span><br><span class="line">        <span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">ROLLBACK</span> TRAN </span><br><span class="line">                <span class="keyword">RETURN</span> <span class="number">0</span> ;  </span><br><span class="line">        <span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>我们来进行实际的正常插表操作（插入表中未插入的id）</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fng0cxt4j20f607ljrp.jpg" alt></p><p>正常是可以走通 的， 但是当我们想实验如果插入一次重复的主键id，实验是否会回滚。</p><p>but。。。。。</p><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fnge5dcdj20rb092my6.jpg" alt></p><p>我们可以观察@@TRANCOUNT在进入子存储过程开启事务后，直接内部ROOLBACK,@@TRANCOUNT,直接归0.当前会报错,类似上面的AB事务的例子。</p><p>*<em>所以这时我们理所想到 save *</em></p><p>我们就会修改一下内存储过程代码（简化）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">BEGIN</span> TRAN tran1      <span class="comment">--开始事务 </span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">SAVE</span> TRAN tranpoint   <span class="comment">--保存事务点</span></span><br><span class="line"></span><br><span class="line">………..代码……….</span><br><span class="line"></span><br><span class="line">      <span class="keyword">IF</span>(<span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> TOP <span class="number">1</span> * <span class="keyword">FROM</span> dbo.test <span class="keyword">WHERE</span> <span class="keyword">ID</span>=@<span class="keyword">ID</span>))    </span><br><span class="line"></span><br><span class="line">       <span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">               <span class="keyword">ROLLBACK</span> TRAN tranpoint ;   <span class="comment">--回滚保存点的事务   </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">             RETURN 0 ;  </span><br><span class="line">       <span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>but。。。。。<img src="!%5B%5D(http://ww1.sinaimg.cn/large/c44b3fe4gy1g5mu8y8w16j20t3088n0f.jpg)" alt="loading"></p><p>好消息是报错减少一个，再次观察，我们虽然保存了返回点，但是没有注意到  ROOLBACK返回值 @@TRANCOUNT值是不变化的。所以可以看到的 再回滚子事务后  @@TRANCOUNT依旧是2，</p><p>但是明明 在父事务中当时begin 是  @@TRANCOUNT是1 这样，但是你进入了一个子存储变2了，应该是0呀，sql就会报错。</p><p><strong>理所当然我们第一时间想到的是，既然ROOLBACK返回保存点不变话，当然，再将其提交不就ok</strong></p><p>再次修改代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">BEGIN</span> TRAN tran1      <span class="comment">--开始事务 </span></span><br><span class="line">       <span class="keyword">SAVE</span> TRAN tranpoint   <span class="comment">--保存事务点</span></span><br><span class="line">………..代码……….</span><br><span class="line"></span><br><span class="line"> <span class="keyword">IF</span>(<span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> TOP <span class="number">1</span> * <span class="keyword">FROM</span> dbo.test <span class="keyword">WHERE</span> <span class="keyword">ID</span>=@<span class="keyword">ID</span>))    </span><br><span class="line">        <span class="keyword">BEGIN</span></span><br><span class="line">                <span class="keyword">ROLLBACK</span> TRAN tranpoint ;   <span class="comment">--回滚保存点的事务   </span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">COMMIT</span> TRAN tran1 ;            <span class="comment">--提示当前事务</span></span><br><span class="line">                          </span><br><span class="line">                RETURN 0 ;  </span><br><span class="line">        <span class="keyword">END</span></span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/c44b3fe4gy1g5fngtwwewj20jf06umxo.jpg" alt></p><p>well done </p><p>这是完全正确状态。我们可以看一个关键点，，就是进入子事务后只是回滚还是2，但是回滚后提交便是1，所以想到的就是先提交内部事务</p>]]></content>
      
      
      <categories>
          
          <category> SQL SERVER </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客更新日志及踩坑记录</title>
      <link href="/2019/07/17/blog-update/"/>
      <url>/2019/07/17/blog-update/</url>
      
        <content type="html"><![CDATA[<h4 id="博客更新日志及踩坑记录"><a href="#博客更新日志及踩坑记录" class="headerlink" title="博客更新日志及踩坑记录"></a>博客更新日志及踩坑记录</h4><h5 id="博客更新日志"><a href="#博客更新日志" class="headerlink" title="博客更新日志"></a>博客更新日志</h5><p><strong>2019-7-15</strong>  完成github+nexo基本搭建</p><p><strong>2019-7-16</strong>  完成next主题的更换与美化</p><p><strong>2019-7-17</strong>  完成博客后期的调整等</p><p><strong>2019-7-18</strong> 添加来必力评论系统</p><h5 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h5><ul><li>我们需要注意的是，每个关键字冒号后需要空格，例如 categories: 博客相关   categories:后需要空格，否则在 hexo s 后无法进行预览</li></ul><ul><li>在域名与github绑定后首次没有问题，但是当更新博客内容，hexo d后就会出现域名丢失，这时候我们无法通过域名进入博客，只能通过<a href="mailto:yourname@github.io" target="_blank" rel="noopener">yourname@github.io</a> 进入博客，这是因为每次在hexo d 就会更新就会将CNAME值更新删除，所以我们可以在本地用sublime在source文件夹下方新建自己域名值 ，例如 xushang.xyz 保存为全部文件。</li></ul><p><em>未完待续</em></p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/15/hello-world/"/>
      <url>/2019/07/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="hello-hexo"><a href="#hello-hexo" class="headerlink" title="hello hexo"></a>hello hexo</h2><ol><li><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1></li><li><p>xx</p></li></ol><h4 id="这是4级标题"><a href="#这是4级标题" class="headerlink" title="这是4级标题"></a>这是4级标题</h4><p><strong>字体加粗</strong></p><p><em>字体斜</em></p><ul><li>test1</li><li>test2</li><li>test3</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span>  <span class="keyword">test</span></span><br></pre></td></tr></table></figure><p><img src alt="loading"></p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
